
#at the end of this play, the router should

#have opnsense installed with 
#  items for PXE
#    PXE server installed
#    DHCP server installed
#    http server installed
#  items for tailscale
#    tailscale
#    advertise local routes over tailscale with correct CIDRS
#    act as an exit node
#    set default routes for local and remote LANs
#  items for firewall
#    port forwarding to the correct k8s load balancer ingresses
#
#IDS to be determined
# use -e or --extra-vars for the tailscale exit node ip, usually 100.64.160.31
- name: Setup Local Router
  hosts: pfsense
  gather_facts: false
  vars:
    k8s_private_ingress_lb_ip: 172.31.0.110
    k8s_public_ingress_lb_ip: 172.31.0.109
    azure_dns_forwarder_ip: 10.0.1.132
    private_application_hosts:
      - alertmanager
      - grafana
      - immich
      - longhorn
      - prowlarr
      - qbittorrent
      - radarr
      - sonarr
      - vikunja
    public_application_hosts: 
      - emby
      - schedule
    azure_dns_domain_overrides:
      - privatelink.vaultcore.azure.net 
      - cloudapp.net
      - vault.azure.net
      - sutliffaro.com
    static_addresses:
      k8s-controlplane:
        macaddr: f4:8e:38:82:a9:dc
        ipaddr: 172.31.0.4
      k8s-node01:
        macaddr: 78:2b:cb:8c:aa:dc
        ipaddr: 172.31.0.10
      k8s-node02:
        macaddr: 0e:54:53:7c:a2:1f
        ipaddr: 172.31.0.40
      truenas:
        macaddr: 74:56:3c:35:37:cc
        ipaddr: 172.31.0.15
      deco-xe75:
        macaddr: f0:a7:31:69:7b:4d
        ipaddr: 172.31.0.75
      proxmox:
        macaddr: ac:1f:6b:00:5d:10
        ipaddr: 172.31.0.200
  tasks:
    - name: set wan interface
      pfsensible.core.pfsense_interface:
        interface: ixl1
        descr: WAN
        enable: true
        ipv4_type: dhcp
        #ipv6_type: dhcp6
        blockpriv: true
        blockbogons: true
    - name: set lan interface
      pfsensible.core.pfsense_interface:
        interface: ixl0
        descr: LAN
        enable: true
        ipv4_type: static
        ipv4_address: 172.31.0.1
        ipv4_prefixlen: 17
    - name: set general settings
      pfsensible.core.pfsense_setup:
        dns_addresses: 1.1.1.1 8.8.8.8 #why is this not a list? dunno
        dnsallowoverride: true
        timezone: US/Eastern
        language: en_US
    #-name: configure DHCP Server #Unavailable currently
    - name: configure static DHCP leases
      pfsensible.core.pfsense_dhcp_static:
        name: "{{ item.key }}"
        macaddr: "{{ item.value.macaddr }}"
        hostname: "{{ item.key }}"
        ipaddr: "{{ item.value.ipaddr }}"
      loop: "{{ lookup('dict', static_addresses) }}"
    - name: install packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - pfSense-pkg-sudo #needed for modules to run as root
        - tailscale
        - pfblockerng
        - tftpd
    #- name: setup tailscale
    - name: dns resolver settings
      pfsensible.core.pfsense_dns_resolver:
        dnssec: true
        forwarding: true
    - name: set dns host overrides for static leases
      pfsensible.core.pfsense_dns_resolver:
        hosts:
          - domain: andrewsutliff.com
            host: "{{ item.key }}"
            ip: "{{ item.value.ipaddr }}"
      loop: "{{ lookup('dict', static_addresses) }}"
    - name: set dns host overrides for external facing applications
      pfsensible.core.pfsense_dns_resolver:
        hosts:
          - domain: andrewsutliff.com
            host: "{{ item }}"
            ip: "{{ k8s_public_ingress_lb_ip }}"
      loop: "{{ public_application_hosts }}"
    - name: set dns host overrides for internal facing applications
      pfsensible.core.pfsense_dns_resolver:
        hosts:
          - domain: andrewsutliff.com
            host: "{{ item }}"
            ip: "{{ k8s_private_ingress_lb_ip }}"
      loop: "{{ private_application_hosts }}"
    - name: set dns domain overrides for azure resources
      pfsensible.core.pfsense_dns_resolver:
        domainoverrides:
          - domain: "{{ item }}"
            ip: "{{ azure_dns_forwarder_ip }}"
      loop: "{{ azure_dns_domain_overrides }}"
    #- name: add ddns
    - name: add DNAT to public facing applications
      pfsensible.core.pfsense_nat_port_forward:
        descr: External to Public Ingress
        interface: wan
        protocol: tcp/udp
        source: any
        destination: IP:wan:443
        target: "{{ k8s_public_ingress_lb_ip }}:443"
        state: present

- name: Setup Remote Router
  hosts: openwrt
  gather_facts: false
  tags: openwrt
  roles:
    - ansible-openwrt
    - role: ansible-openwrt
      vars:
        openwrt_scp_if_ssh: yes
        openwrt_install_recommended_packages: yes
        scp_if_ssh: yes
  vars:
    main_router_tailscale_ip: 100.107.68.105
  tasks:
    - name: change default lan interface ip
      uci:
        command: section
        config: network
        name: lan
        type: interface
        find_by:
          device: br-lan
        value:
          proto: static
          device: br-lan
          ipaddr: 172.31.128.1/17
          netmask: 225.225.128.0
          ip6assign: 60
    - name: install serial exposure module
      opkg:
        name: kmod-usb-serial-option
    - name: install uqmi requirements
      opkg:
        name: "{{ item }}"
        state: present
      loop:
        - kmod-usb-net-qmi-wwan
        - uqmi
        - luci-proto-qmi
    - name: set wwan interface
      uci:
        command: section
        config: network
        name: wwan
        type: interface
        find_by:
          device: /dev/cdc-wdm0
        value:
          proto: qmi
          device: /dev/cdc-wdm0
          apn: internet
          pdptype: ipv4v6
    - name: check if wwan is running
      shell:
        cmd: uqmi -d /dev/cdc-wdm0 --get-data-status
      register: connection_status
    - name: start wwan card
      shell:
        cmd: uqmi -d /dev/cdc-wdm0 --start-network internet --autoconnect
      when: connection_status.stdout != "\"connected\""
    - name: commit changes
      uci:
        command: commit
      notify: restart network
    - name: install tailscale
      opkg:
        name: tailscale
        state: present
    - name: init tailscale
      shell:
        cmd: "tailscale up --advertise-routes=172.31.128.0/17 --accept-routes --exit-node={{ main_router_tailscale_ip }} --exit-node-allow-lan-access=true --netfilter-mode=off --snat-subnet-routes=true --auth-key={{ tailscale_auth_key }}"
      tags: tailscale_init
    - name: add tailscale interface
      uci:
        command: section
        config: network
        name: tailscale
        type: interface
        find_by:
          device: tailscale0
        value:
          proto: none
          device: tailscale0
    - name: setup tailscale firewall zone 
      uci:
        #command: add
        command: set
        key: firewall.@zone[-1]
        #config: firewall
        #type: zone
        value:
          name: tailscale
          input: ACCEPT
          output: ACCEPT
          forward: ACCEPT
          masq: 1
          mtu_fix: 1
          enabled: 1
    - name: add list network to tailscale zone
      uci:
        command: add_list
        key: firewall.@zone[-1].network
        value: tailscale
    - name: forward tailscale to lan
      uci:
        command: set
        key: firewall.@forwarding[0]
        value:
          src: tailscale
          dest: lan
    - name: forward lan to tailscale
      uci:
        command: set
        key: firewall.@forwarding[1]
        value:
          src: lan
          dest: tailscale
    - name: forward tailscale to wan
      uci:
        command: set
        key: firewall.@forwarding[2]
        value:
          src: tailscale
          dest: wan
    - name: delete old dns forwarding servers
      uci:
        command: delete
        key: network.wan.dns
    - name: set new dns upstream forwarding
      uci:
        command: add_list
        key: network.wan.dns
        value: "{{ item }}"
      loop:
        - 172.31.0.1
        - 100.100.100.100
    - name: turn off peer dns
      uci:
        command: set
        key: "{{ item }}"
        value: "0"
      loop:
        - network.wan.peerdns
          #- network.wan6.peerdns don't have DNS set up on ipv6 yet
    - name: Force DNS Through Router
      uci:
        command: set
        key: firewall.@redirect[-1]
        value:
          target: DNAT
          name: 'Force DNS'
          src: lan
          src_dport: 53
    - name: commit changes
      uci:
        command: commit
      notify: restart network
