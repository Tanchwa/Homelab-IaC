---
- name: Install Packages
  hosts: localhost
  vars: 
    fedora_number: 42
    dnf_packages:
      - neovim
      - btop
      - qt5-*
      - qt
      - qt-common
      - qt6-qt5compat
      - qt6-qtdeclarative
      - hack-fonts
      - jetbrains-mono-fonts
      - asusctl
      - asusctl-rog-gui
      - flatpak
      - fastfetch
      - hyprland
      - hyprland-qtutils
      - aylurs-gtk-shell
      - swww
      - uwsm
      - dnf-plugins-core
      - akmod-nvidia
      - xorg-x11-drv-nvidia-cuda
      - inxi
      - kernel-devel
      - wine.x86_64
      - winetricks
      - glibc-langpack-zh.x86_64
      - ibus-libpinyin
      - sassc
      - nwg-look
      - hyprshot
      - cava
      - tailscale
    coprs:
      - lukenukem/asus-linux
      - solopasha/hyprland
      - matthickford/git-credential-manager 
      - zawertun/hack-fonts
      - elxreno/jetbrains-mono-fonts
    flatpacks:
      - com.logseq.Logseq
      - com.discordapp.Discord
      - com.valvesoftware.Steam
    wget_packages:
      zsh: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
      etcher: https://github.com/balena-io/etcher/releases/download/v2.1.2/balenaEtcher-linux-x64-2.1.2.zip
  tasks:
    - name: Install Copr Packages
      community.general.copr:
        state: enabled
        name: "{{ item }}"
      loop: "{{ coprs }}"
    - name: Install Dnf Packages
      dnf:
        name: "{{ item }}"
        state: present
      loop: "{{ dnf_packages }}"
    - name: Install Apps from Wget
      get_url:
        dest: /tmp/{{ item.key }}
        url: "{{ item.value }}"
        mode: '0744'
      loop: "{{ lookup('dict', wget_packages, wantlist=true) }}"
    - name: Add Flathub remote
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    - name: Install Flatpacks
      community.general.flatpak:
        name: "{{ item }}"
        state: present
      with_items: "{{ flatpacks }}"

    - name: Set Browser Repo
      yum_repository:
        name: brave-browser-rpm-release
        baseurl: https://brave-browser-rpm-release.s3.brave.com/brave-browser.repo
        description: Rpm repo for Brave
        state: present
    - name: Install Browser
      dnf:
        name: brave-browser
        state: present

- name: Configure Zsh
  hosts: localhost
  vars:
    user: tanchwa
  tasks:
    - name: Remove .Oh-My-Zsh File if it Exists
      file:
        path:  /home/{{ user }}/.oh-my-zsh
        state: absent
    - name: Install Oh-My-Zsh
      shell:
        cmd: /tmp/zsh --unattended
      environment:
        KEEP_ZSHRC: yes
        ZSH: /home/{{ user }}/.oh-my-zsh
    - name: Change Oh-My-Zsh Dir Owner
      file: 
        path: /home/{{ user }}/.oh-my-zsh
        owner: "{{ user }}"
        group: "{{ user }}"
        recurse: true
        mode: '0755'
    - name: Install Powerlevel9k Theme
      git:
        repo: https://github.com/bhilburn/powerlevel9k.git
        dest: /home/{{ user }}/.oh-my-zsh/custom/themes/powerlevel9k

- name: Setup Balena Etcher
  hosts: localhost
  tasks:
    - name: Unzip Balena Etcher
      unarchive:
        creates: /opt/balenaEtcher-linux-x64
        src: /tmp/etcher
        dest: /tmp
    - name: Move Balena Etcher
      copy:
        remote_src: true
        src: /tmp/balenaEtcher-linux-x64
        dest: /opt
        mode: '0755'
    - name: Create a Symlink for Binary
      file:
        src: /opt/balenaEtcher-linux-x64/balena-etcher
        dest: /usr/bin/balena-etcher
        mode: '0755'
        state: link

- name: Load Fonts
  hosts: localhost
  tasks:
    - name: Refresh Fonts
      shell:
        cmd: fc-cache -f -v

- name: Load Dot Configs
  hosts: localhost
  vars:
    dots_repo: https://github.com/tanchwa/dotfiles.git
    file_patterns:
      - .local
      - .config
      - .zshrc
      - .gitconfig
      - bin
      - .themes
      - .icons
  tasks:
    - name: Checkout Dotfiles
      git:
        repo: "{{ dots_repo }}"
        dest: /tmp/checkout
        force: true

    - name: Copy Dotfiles
      copy:
        src: /tmp/checkout/{{ item }}
        dest: /home/tanchwa
        owner: tanchwa
        group: tanchwa
        mode: '0755'
      with_items: "{{ file_patterns }}" 
      delegate_to: localhost

- name: Configure Nvidia Drivers
  hosts: localhost
  tasks:
    - name: Blacklist Nouveau Driver
      community.general.kernel_blacklist:
        name: nouveau
        state: present



## DONE BY HAND NOTES ##
#enable non free repos
#sudo dnf install \   https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm 
#had to install a kernel specific version of kernel devel for akmods kernel module builder for nvidia drivers
#
#installed ableton through wine
#ran winetricks quicktime72
#for ableton dependancies
#winetricks gdiplus msxml3 msxml4 msxml6 vcrun2005 quicktime72 fontsmooth=rgb msls31 d3dcompiler_43 corefonts atmlib
#
#troubleshooting for getting nvidia glxinfo working
# finally got it to work with 
# GBM_BACKEND=nvidia-drm
#__GLX_VENDOR_LIBRARY_NAME=nvidia
#and it appeared in glxinfo

